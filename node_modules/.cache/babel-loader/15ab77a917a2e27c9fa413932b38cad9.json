{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/breaking-news/src/ui/swiper/swiper.tsx\";\nimport React from 'react';\nimport Swiper from 'react-id-swiper';\nimport './swiper.css';\nexport const SwiperComponent = ({\n  newsData\n}) => {\n  // const params = {\n  //   pagination: {\n  //     el: '.swiper-pagination',\n  //     clickable: true,\n  //     dynamicBullets: true\n  //   }\n  // }\n  const params = {\n    spaceBetween: 17,\n    slidesOffsetAfter: 17,\n    slidesPerView: 3,\n    // Длина анимации переключения слайдов (не скорость!!). В нашем случае влияет\n    // на скорость возвращения к краю скролла при перескролле (overscroll, как в маке)\n    speed: 500,\n    // ms\n    grabCursor: true,\n    slideClass: 'slide',\n    preventClicks: true,\n    // Не учитываем очень маленькие свайпы, чтобы неаккуратные клики по кнопке не мешали жить\n    threshold: 4,\n    // px\n    containerClass: 'customizedContainer',\n    shouldSwiperUpdate: false,\n    observer: true\n  };\n  const options = {\n    direction: \"horizontal\"\n  };\n  return /*#__PURE__*/React.createElement(Swiper, Object.assign({}, params, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), newsData);\n};","map":{"version":3,"sources":["/Users/larisabulacheva/breaking-news/src/ui/swiper/swiper.tsx"],"names":["React","Swiper","SwiperComponent","newsData","params","spaceBetween","slidesOffsetAfter","slidesPerView","speed","grabCursor","slideClass","preventClicks","threshold","containerClass","shouldSwiperUpdate","observer","options","direction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,cAAP;AAMA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,YAAY,EAAE,EADD;AAEbC,IAAAA,iBAAiB,EAAE,EAFN;AAGbC,IAAAA,aAAa,EAAE,CAHF;AAIb;AACA;AACAC,IAAAA,KAAK,EAAE,GANM;AAMD;AACZC,IAAAA,UAAU,EAAE,IAPC;AAQbC,IAAAA,UAAU,EAAE,OARC;AASbC,IAAAA,aAAa,EAAE,IATF;AAUb;AACAC,IAAAA,SAAS,EAAE,CAXE;AAWC;AACdC,IAAAA,cAAc,EAAE,qBAZH;AAabC,IAAAA,kBAAkB,EAAE,KAbP;AAcbC,IAAAA,QAAQ,EAAE;AAdG,GAAf;AAgBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE;AADG,GAAhB;AAIA,sBACE,oBAAC,MAAD,oBAAYb,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,QADH,CADF;AAMD,CAlCM","sourcesContent":["import React from 'react';\nimport Swiper from 'react-id-swiper';\nimport './swiper.css';\n\ntype Props = {\n  newsData: React.ReactNode | any\n}\n\nexport const SwiperComponent = ({ newsData }: Props): React.ReactElement => {\n  // const params = {\n  //   pagination: {\n  //     el: '.swiper-pagination',\n  //     clickable: true,\n  //     dynamicBullets: true\n  //   }\n  // }\n  const params = {\n    spaceBetween: 17,\n    slidesOffsetAfter: 17,\n    slidesPerView: 3,\n    // Длина анимации переключения слайдов (не скорость!!). В нашем случае влияет\n    // на скорость возвращения к краю скролла при перескролле (overscroll, как в маке)\n    speed: 500, // ms\n    grabCursor: true,\n    slideClass: 'slide',\n    preventClicks: true,\n    // Не учитываем очень маленькие свайпы, чтобы неаккуратные клики по кнопке не мешали жить\n    threshold: 4, // px\n    containerClass: 'customizedContainer',\n    shouldSwiperUpdate: false,\n    observer: true,\n  }\n  const options = {\n    direction: \"horizontal\"\n\n  }\n  return (\n    <Swiper {...params}>\n      {newsData}\n    </Swiper>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}