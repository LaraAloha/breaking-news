{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/breaking-news/src/ui/news/news.tsx\";\nimport React from 'react';\nimport { getNews } from '../../dev/get-news';\nimport './news.css';\nexport class News extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getNewsElements = () => {\n      const {\n        googleAccesKey,\n        sid,\n        searchRequest\n      } = this.props.defaultValues;\n      let newsCounter = 5;\n\n      for (let i = 0; i < newsCounter; i++) {\n        // do {\n        getNews(googleAccesKey, sid, searchRequest).then(data => {\n          return data.items.map(item => {\n            // newsCounter++\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }\n            }, item);\n          });\n        });\n      } // }\n      // while (newsCounter < 5)\n\n    };\n  }\n\n  render() {\n    const {\n      googleAccesKey,\n      sid,\n      searchRequest\n    } = this.props.defaultValues; // getNews(googleAccesKey, sid, searchRequest).forEach((promise: Promise<any>) => {\n    //   promise.then(response => {\n    //     console.log(response)\n    //   })\n    // })\n\n    getNews(googleAccesKey, sid, searchRequest, newsAmount); // const newB = this.getNewsElements()\n    // console.log(newB)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/breaking-news/src/ui/news/news.tsx"],"names":["React","getNews","News","PureComponent","getNewsElements","googleAccesKey","sid","searchRequest","props","defaultValues","newsCounter","i","then","data","items","map","item","render","newsAmount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,YAAP;AAQA,OAAO,MAAMC,IAAN,SAAmBF,KAAK,CAACG,aAAzB,CAAqD;AAAA;AAAA;;AAAA,SAqBlDC,eArBkD,GAqBhC,MAAW;AACnC,YAAM;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA,GAAlB;AAAuBC,QAAAA;AAAvB,UAAyC,KAAKC,KAAL,CAAWC,aAA1D;AACA,UAAIC,WAAW,GAAG,CAAlB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAApB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC;AACAV,QAAAA,OAAO,CAACI,cAAD,EAAiBC,GAAjB,EAAsBC,aAAtB,CAAP,CACGK,IADH,CACSC,IAAD,IAAe;AACnB,iBAAOA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAe;AACnC;AACA,gCAAQ;AAAK,cAAA,GAAG,EAAEL,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACLK,IADK,CAAR;AAID,WANM,CAAP;AAOD,SATH;AAUD,OAhBkC,CAiBnC;AACA;;AACD,KAxCyD;AAAA;;AACnDC,EAAAA,MAAP,GAAoC;AAClC,UAAM;AAAEZ,MAAAA,cAAF;AAAkBC,MAAAA,GAAlB;AAAuBC,MAAAA;AAAvB,QAAyC,KAAKC,KAAL,CAAWC,aAA1D,CADkC,CAGlC;AACA;AACA;AACA;AACA;;AACAR,IAAAA,OAAO,CAACI,cAAD,EAAiBC,GAAjB,EAAsBC,aAAtB,EAAqCW,UAArC,CAAP,CARkC,CAUlC;AACA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAnByD","sourcesContent":["import React from 'react';\nimport { getNews } from '../../dev/get-news'\nimport './news.css';\nimport { DefaultValues } from '../../store/types'\n\ntype Props = {\n  defaultValues: DefaultValues\n}\ntype State = {}\n\nexport class News extends React.PureComponent<Props, State> {\n  public render(): React.ReactElement {\n    const { googleAccesKey, sid, searchRequest } = this.props.defaultValues\n\n    // getNews(googleAccesKey, sid, searchRequest).forEach((promise: Promise<any>) => {\n    //   promise.then(response => {\n    //     console.log(response)\n    //   })\n    // })\n    getNews(googleAccesKey, sid, searchRequest, newsAmount)\n\n    // const newB = this.getNewsElements()\n    // console.log(newB)\n    return (\n      <div className=\"root\">\n        {/* {this.getNewsElements()} */}\n\n      </div>\n    )\n  }\n\n  private getNewsElements = (): any => {\n    const { googleAccesKey, sid, searchRequest } = this.props.defaultValues\n    let newsCounter = 5\n\n    for (let i = 0; i < newsCounter; i++) {\n      // do {\n      getNews(googleAccesKey, sid, searchRequest)\n        .then((data: any) => {\n          return data.items.map((item: any) => {\n            // newsCounter++\n            return (<div key={i}>\n              {item}\n            </div>\n            )\n          })\n        })\n    }\n    // }\n    // while (newsCounter < 5)\n  }\n}"]},"metadata":{},"sourceType":"module"}